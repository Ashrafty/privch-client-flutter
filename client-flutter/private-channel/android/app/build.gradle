plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def isXinlake = System.getProperty("user.name").toLowerCase().contentEquals("xinlake")
if (isXinlake) {
    apply from: "xinlake.gradle"
}

android {
    namespace "xinlake.privch"

    buildToolsVersion="33.0.3"
    compileSdk flutter.compileSdkVersion
    ndkVersion '26.1.10909125' // flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "xinlake.privch"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 26 //flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        setProperty("archivesBaseName", applicationId + "-v" + versionName)
    }

    signingConfigs {
        if (isXinlake) {
            xinlake {
                storeFile file(signingStoreFile)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }
    }

    buildTypes {
        debug {
            signingConfig isXinlake ? signingConfigs.xinlake : signingConfigs.debug
        }
        profile {
            signingConfig isXinlake ? signingConfigs.xinlake : signingConfigs.debug
        }
        release {
            signingConfig isXinlake ? signingConfigs.xinlake : signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
